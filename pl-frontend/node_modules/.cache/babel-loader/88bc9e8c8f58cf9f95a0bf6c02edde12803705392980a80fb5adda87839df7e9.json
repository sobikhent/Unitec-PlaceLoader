{"ast":null,"code":"var _jsxFileName = \"/Users/ariabedrud/Desktop/PlaceLoader/pl-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [keyword, setKeyword] = useState('');\n  const [city, setCity] = useState('');\n  const [tableData, setTableData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const tableRef = useRef(null); // Added this line to define tableRef\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true); // Set loading to true when the data fetch starts\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/process_data', {\n        keyword,\n        city\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const parsedData = JSON.parse(response.data);\n      setTableData(parsedData);\n      setIsLoading(false); // Set loading to false when the data fetch is complete\n    } catch (error) {\n      console.error('There was an error!', error);\n      setIsLoading(false);\n    }\n  };\n  const exportToExcel = () => {\n    const ws = XLSX.utils.table_to_sheet(tableRef.current);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\n    XLSX.writeFile(wb, \"SheetJS.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Keyword:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: keyword,\n          onChange: e => setKeyword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"City:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this), tableData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToExcel,\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        ref: tableRef,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: tableData.columns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 56\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData.data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.map((cell, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cell\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Muypfzb0SUlnjijrpefGG4AhotI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","XLSX","jsxDEV","_jsxDEV","App","_s","keyword","setKeyword","city","setCity","tableData","setTableData","isLoading","setIsLoading","tableRef","handleSubmit","e","preventDefault","response","post","headers","parsedData","JSON","parse","data","error","console","exportToExcel","ws","utils","table_to_sheet","current","wb","book_new","book_append_sheet","writeFile","className","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","ref","columns","map","col","index","row","cell","i","_c","$RefreshReg$"],"sources":["/Users/ariabedrud/Desktop/PlaceLoader/pl-frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [keyword, setKeyword] = useState('');\n  const [city, setCity] = useState('');\n  const [tableData, setTableData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const tableRef = useRef(null);  // Added this line to define tableRef\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);  // Set loading to true when the data fetch starts\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/process_data', {\n        keyword,\n        city,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const parsedData = JSON.parse(response.data);\n      setTableData(parsedData);\n      setIsLoading(false);  // Set loading to false when the data fetch is complete\n    } catch (error) {\n      console.error('There was an error!', error);\n      setIsLoading(false);\n    }\n  };\n\n  const exportToExcel = () => {\n    const ws = XLSX.utils.table_to_sheet(tableRef.current);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Sheet1\");\n    XLSX.writeFile(wb, \"SheetJS.xlsx\");\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          Keyword:\n          <input type=\"text\" value={keyword} onChange={(e) => setKeyword(e.target.value)} />\n        </label>\n        <label>\n          City:\n          <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      \n      {isLoading && <p>Loading...</p>}\n\n      {tableData && (\n        <div>\n          <button onClick={exportToExcel}>Export to Excel</button>\n          <table border=\"1\" ref={tableRef}>\n            <thead>\n              <tr>\n                {tableData.columns.map((col, index) => <th key={index}>{col}</th>)}\n              </tr>\n            </thead>\n            <tbody>\n              {tableData.data.map((row, index) => (\n                <tr key={index}>\n                  {row.map((cell, i) => <td key={i}>{cell}</td>)}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}